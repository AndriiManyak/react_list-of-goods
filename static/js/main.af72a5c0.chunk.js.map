{"version":3,"sources":["components/ButtonStart/ButtonStart.js","components/GoodList/GoodList.js","components/shapes/prepearedGoodsShape.js","components/LengthSelect/LengthSelect.js","components/ControlButtons/ControlButtons.js","App.js","index.js"],"names":["ButtonStart","handleClick","type","onClick","GoodList","PropTypes","shape","name","string","isRequired","id","number","goods","map","good","key","LengthSelect","handleChange","value","optionsOfLength","i","push","label","className","onChange","options","ControllButtons","reverseGoods","sortGoodsAlphabetically","reset","sortGoodsByLength","prepearedGoods","index","App","state","isListVisible","selectedValue","start","setState","prevState","sort","prevGood","curGood","localeCompare","reverse","setTargetLength","selectedOption","targetLength","filter","length","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.af72a5c0.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const ButtonStart = ({ handleClick }) => (\n  <button type=\"button\" onClick={handleClick}>\n    Start\n  </button>\n);\n\nButtonStart.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { prepearedGoodsShape } from '../shapes/prepearedGoodsShape';\n\nexport const GoodList = ({ goods }) => (\n  <ul>\n    {\n      goods.map(good => (\n        <li key={good.id}>{good.name}</li>\n      ))\n    }\n  </ul>\n);\n\nGoodList.propTypes = {\n  goods: PropTypes.arrayOf(prepearedGoodsShape).isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport const prepearedGoodsShape = PropTypes.shape({\n  name: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n}).isRequired;\n","import React from 'react';\nimport Select from 'react-select';\nimport PropTypes from 'prop-types';\n\nimport './LengthSelect.css';\n\nexport const LengthSelect = ({ handleChange, value }) => {\n  const optionsOfLength = [];\n\n  for (let i = 1; i <= 10; i += 1) {\n    optionsOfLength.push({\n      value: i,\n      label: i,\n    });\n  }\n\n  return (\n    <Select\n      className=\"LengthSelect\"\n      value={value}\n      onChange={handleChange}\n      options={optionsOfLength}\n    />\n  );\n};\n\nLengthSelect.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  value: PropTypes.shape({\n    value: PropTypes.number.isRequired,\n    label: PropTypes.number.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const ControllButtons = ({\n  reverseGoods,\n  sortGoodsAlphabetically,\n  reset,\n  sortGoodsByLength,\n}) => (\n  <>\n    <button type=\"button\" onClick={reverseGoods}>\n      Reverse\n    </button>\n\n    <button type=\"button\" onClick={sortGoodsAlphabetically}>\n      Sort alphabetically\n    </button>\n\n    <button type=\"button\" onClick={reset}>\n      Reset\n    </button>\n\n    <button type=\"button\" onClick={sortGoodsByLength}>\n      Sort by length\n    </button>\n  </>\n);\n\nControllButtons.propTypes = {\n  reverseGoods: PropTypes.func.isRequired,\n  sortGoodsAlphabetically: PropTypes.func.isRequired,\n  reset: PropTypes.func.isRequired,\n  sortGoodsByLength: PropTypes.func.isRequired,\n};\n","import React from 'react';\n\nimport { ButtonStart } from './components/ButtonStart';\nimport { GoodList } from './components/GoodList';\nimport { LengthSelect } from './components/LengthSelect/LengthSelect';\nimport { ControllButtons } from './components/ControlButtons/ControlButtons';\n\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst prepearedGoods = goodsFromServer.map((good, index) => ({\n  name: good,\n  id: index,\n}));\n\nclass App extends React.Component {\n  state = {\n    isListVisible: false,\n    goods: prepearedGoods,\n    selectedValue: {\n      value: 1,\n      label: 1,\n    },\n  }\n\n  start = () => {\n    this.setState({ isListVisible: true });\n  }\n\n  sortGoodsAlphabetically = () => {\n    this.setState(prevState => (\n      {\n        goods: [...prevState.goods].sort((prevGood, curGood) => (\n          prevGood.name.localeCompare(curGood.name)\n        )),\n      }\n    ));\n  }\n\n  reverseGoods = () => {\n    this.setState(prevState => ({ goods: [...prevState.goods].reverse() }));\n  }\n\n  reset = () => {\n    this.setState({\n      goods: prepearedGoods,\n      selectedValue: {\n        value: 1,\n        label: 1,\n      },\n    });\n  }\n\n  setTargetLength = (selectedOption) => {\n    const targetLength = selectedOption.value;\n\n    this.setState({\n      goods: prepearedGoods.filter(good => good.name.length >= targetLength),\n      selectedValue: selectedOption,\n    });\n  }\n\n  sortGoodsByLength = () => {\n    this.setState(prevState => (\n      {\n        goods: [...prevState.goods].sort((prevGood, curGood) => (\n          prevGood.name.length - curGood.name.length\n        )),\n      }\n    ));\n  };\n\n  render() {\n    const { isListVisible, goods, selectedValue } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        {\n          isListVisible\n            ? <GoodList goods={goods} />\n            : <ButtonStart handleClick={this.start} />\n        }\n\n        <ControllButtons\n          reverseGoods={this.reverseGoods}\n          sortGoodsAlphabetically={this.sortGoodsAlphabetically}\n          reset={this.reset}\n          sortGoodsByLength={this.sortGoodsByLength}\n        />\n\n        <LengthSelect\n          handleChange={this.setTargetLength}\n          value={selectedValue}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}